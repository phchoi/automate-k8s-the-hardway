- hosts: controller
  become: true
  become_method: sudo
  become_user: root
  tasks:
    - name: get service facts
      service_facts:

    - name: print services status for container node debug
      debug: msg="{{ ansible_facts.services[item]['name'] }} is {{ ansible_facts.services[item]['status'] }} and {{ ansible_facts.services[item]['state'] }}"
      with_items:
        - kube-scheduler.service
        - kube-apiserver.service
        - kube-controller-manager.service

    # maybe this should be replaced with failed_when
    - name: report failure for container node
      debug: msg="please check {{ ansible_facts.services[item]['name'] }}"
      when: (ansible_facts.services[item]['status'] != 'enabled') or 
            (ansible_facts.services[item]['state'] != 'running')
      with_items:
        - kube-scheduler.service
        - kube-apiserver.service
        - kube-controller-manager.service


- hosts: worker
  become: true
  become_method: sudo
  become_user: root
  tasks:
    - name: get service facts
      service_facts:

    - name: print services status for worker node debug
      debug: msg="{{ ansible_facts.services[item]['name'] }} is {{ ansible_facts.services[item]['status'] }} and {{ ansible_facts.services[item]['state'] }}"
      with_items:
        - containerd.service
        - kube-proxy.service
        - kubelet.service

    # maybe this should be replaced with failed_when
    - name: report failure for worker node
      debug: msg="please check {{ ansible_facts.services[item]['name'] }}"
      when: (ansible_facts.services[item]['status'] != 'enabled') or 
            (ansible_facts.services[item]['state'] != 'running')
      with_items:
        - containerd.service
        - kube-proxy.service
        - kubelet.service
