# https://github.com/kelseyhightower/kubernetes-the-hard-way/blob/master/docs/09-bootstrapping-kubernetes-workers.md

- name: Setup controller
  hosts: worker
  gather_facts: yes
  become: true
  become_method: sudo
  become_user: root
  tasks:
    - name: apt-get update before installing package
      apt:
        update_cache: yes

    - name: Install latest socat conntrack ipset
      apt:
        name: "{{ item }}"
        state: latest
        install_recommends: no
      with_items:
        - socat
        - conntrack
        - ipset

    - name: disable swap
      shell: swapoff -a

    - name: remove swap mount
      mount:
        src: /swapfile
        path: none
        state: absent

    - name: create workers directory
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - '/etc/cni/net.d'
        - '/opt/cni/bin'
        - '/var/lib/kubelet'
        - '/var/lib/kube-proxy'
        - '/var/lib/kubernetes'
        - '/var/run/kubernetes'
        - '/tmp/containerd'
        - '/etc/containerd'

    - name: Download kubernetes worker binaries
      get_url:
        url: "{{ item }}"
        dest: /usr/local/bin/
        mode: 0755
      with_items:
        - 'https://storage.googleapis.com/kubernetes-release/release/v1.15.3/bin/linux/amd64/kubectl'
        - 'https://storage.googleapis.com/kubernetes-release/release/v1.15.3/bin/linux/amd64/kube-proxy'
        - 'https://storage.googleapis.com/kubernetes-release/release/v1.15.3/bin/linux/amd64/kubelet'

    - name: Download kubernetes worker binaries
      get_url:
        url: https://github.com/opencontainers/runc/releases/download/v1.0.0-rc8/runc.amd64
        dest: /usr/local/bin/runc
        mode: 0755

    - name: Download containerd cni-plugins crictl
      get_url:
        url: "{{ item }}"
        dest: /tmp/
        mode: 0644
      with_items:
        - 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.15.0/crictl-v1.15.0-linux-amd64.tar.gz'
        - 'https://github.com/containernetworking/plugins/releases/download/v0.8.2/cni-plugins-linux-amd64-v0.8.2.tgz'
        - 'https://github.com/containerd/containerd/releases/download/v1.2.9/containerd-1.2.9.linux-amd64.tar.gz'
      
    - name: uncompress crictl tar.gz
      unarchive:
        src: /tmp/crictl-v1.15.0-linux-amd64.tar.gz
        dest: /usr/local/bin/
        group: root
        owner: root
        remote_src: yes
      
    - name: uncompress cin-plugins tar.gz
      unarchive:
        src: /tmp/cni-plugins-linux-amd64-v0.8.2.tgz
        dest: /opt/cni/bin/
        group: root
        owner: root
        remote_src: yes
      
    - name: uncompress containerd tar.gz
      unarchive:
        src: /tmp/containerd-1.2.9.linux-amd64.tar.gz
        dest: /tmp/containerd/
        remote_src: yes

    - name: copy containerd to /bin/
      copy:
        src: "/tmp/containerd/bin/{{ item }}"
        dest: /bin/
        remote_src: yes
        mode: 0755
        owner: root
        group: root
      with_items:
        - containerd
        - containerd-shim
        - containerd-shim-runc-v1
        - containerd-stress
        - ctr

    - name: configure cni networking - 10-bridge.conf
      template:
        src: worker_cni_10-bridge.conf.j2
        dest: /etc/cni/net.d/10-bridge.conf

    - name: configure cni networking - 99-loopback.conf
      copy:
        src: worker_cni_99-loopback.conf
        dest: /etc/cni/net.d/99-loopback.conf

    - name: configure containerd config.toml
      copy:
        src: containerd_config.toml
        dest: /etc/containerd/config.toml

    - name: configure containerd systemd service file
      copy:
        src: containerd.service
        dest: /etc/systemd/system/containerd.service

    - name: move pem to /var/lib/kubelet
      copy:
        src: "{{ item }}"
        dest: /var/lib/kubelet/
        remote_src: yes
      with_items:
        - "/root/{{ ansible_hostname }}-key.pem"
        - "/root/{{ ansible_hostname }}.pem"

    - name: move kubeconfig /var/lib/kubelet/
      copy:
        src: "/root/{{ ansible_hostname }}.kubeconfig" 
        dest: /var/lib/kubelet/kubeconfig
        remote_src: yes

    - name: move ca.pem to /var/lib/kubernetes
      copy:
        src: "{{ item }}"
        dest: /var/lib/kubernetes/
        remote_src: yes
      with_items:
        - "/root/ca.pem"

# https://github.com/kelseyhightower/kubernetes-the-hard-way/blob/master/docs/09-bootstrapping-kubernetes-workers.md#configure-the-kubelet
    - name: create kubelet-config.yaml 
      template:
        src: kubelet-config.yaml.j2
        dest: /var/lib/kubelet/kubelet-config.yaml

    - name: create kubelet.service
      copy:
        src: kubelet.service
        dest: /etc/systemd/system/kubelet.service

    - name: move kube-proxy.kubeconfig to /var/lib/kube-proxy/kubeconfig
      copy:
        src: /root/kube-proxy.kubeconfig
        dest: /var/lib/kube-proxy/kubeconfig
        remote_src: yes

    - name: create kube-proxy-config.yaml
      template:
        src: kube-proxy-config.yaml.j2
        dest: /var/lib/kube-proxy/kube-proxy-config.yaml

    - name: create kube-proxy.service
      copy:
        src: kube-proxy.service
        dest: /etc/systemd/system/kube-proxy.service

    - name: reread systemd configs
      systemd:
        daemon_reload: yes

# maybe in future should move it to handler
    - name: enable and start kube-apiserver kube-controller-manager kube-scheduler
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: restarted
      with_items:
        - containerd
        - kubelet
        - kube-proxy

